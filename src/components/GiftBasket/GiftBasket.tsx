import React from 'react'
import {Link} from 'react-router-dom'
import {motion, AnimatePresence} from 'framer-motion'
import {connect} from 'react-redux'
import Helmet from 'react-helmet'
import {ReactComponent as Spot} from '../../assets/images/spot.svg'
import {ReactComponent as Cart} from '../../assets/images/cart.svg'
import {ReactComponent as Divider} from '../../assets/images/divider-mono.svg'
import Gift from './Gift'
import GiftSlides from '../GiftSlides'
import {AddCart} from '../../actions/cartActions'
import './GiftBasket.scss'

type Props = {
  //TODO: –ø—Ä–æ–ø–∏—Å–∞—Ç—å —Ç–∏–ø—ã
  products: any
  AddCart?: any
  numberCart: number
  carts: any
}

const GiftBasket: React.FC<Props> = (props) => {
  const {products} = props.products

  const isSelected = (id) => {
    return props.carts.find(item => item.id === id)
  }

  return (
    <div className="GiftBasket">
      <Helmet>
        <title>–ß—Ç–æ –ø—Ä–∏–≤–µ–∑—Ç–∏ –∏–∑ –ö—Ä—ã–º–∞ –≤ –ø–æ–¥–∞—Ä–æ–∫? –ö—É–ø–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –æ–Ω–ª–∞–π–Ω —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π.</title>
        <meta name="description" content="–ò—â–∏—Ç–µ —á—Ç–æ –ø—Ä–∏–≤–µ–∑—Ç–∏ –∏–∑ –ö—Ä—ã–º–∞ –≤ –ø–æ–¥–∞—Ä–æ–∫? –ö—É–ø–∏—Ç—å —Å—É–≤–µ–Ω–∏—Ä—ã –∏ –Ω–∞–±–æ—Ä—ã –∏–∑ –ì–æ—Ä–Ω–æ–≥–æ
        –ö—Ä—ã–º–∞ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π."/>
      </Helmet>
      <Divider className="divider"/>
      <header className="header">
        <div>
          <Link to="/">
            <Spot className="logo"/>
          </Link>
        </div>
        <Link to="/cart" className="order">
          <AnimatePresence>
            {props.numberCart && props.numberCart !== 0 && (
              <motion.div
                initial={{opacity: 0, x: -150}}
                animate={{opacity: 1, x: 0}}
                transition={{duration: 1, type: 'spring'}}
                exit={{opacity: 0}}
              >
                <b>–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</b>
              </motion.div>
            )}
          </AnimatePresence>
          <AnimatePresence>
            <div className="cart">
              {props.numberCart !== 0 && (
                <motion.div
                  initial={{opacity: 0, scale: 3}}
                  animate={{opacity: 1, scale: 1}}
                  transition={{duration: 1, type: 'spring'}}
                  exit={{opacity: 0, scale: 2}}
                  className="counter"
                >{props.numberCart}</motion.div>
              )}
              {props.numberCart !== 0 && (<Cart/>)}
            </div>
          </AnimatePresence>
        </Link>
      </header>
      <div className="content">
        <h2>–ö—Ä—ã–º—Å–∫–∏–π —Ç—ë–ø–ª—ã–π –ø–æ–¥–∞—Ä–æ–∫ üß°</h2>
        <h4>–ü–æ—Ä–∞–¥—É–π—Ç–µ —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π, –±–ª–∏–∑–∫–∏—Ö –∏–ª–∏ —Å–∞–º–∏—Ö —Å–µ–±—è –ø–æ–¥–∞—Ä–∫–æ–º, —Å–æ–≥—Ä–µ–≤–∞—é—â–∏–º —Å–µ—Ä–¥—Ü–µ. –ü–æ–¥–∞—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –º—ã –¥–æ—Å—Ç–∞–≤–∏–º –∫
          –≤–∞–º –ø—Ä—è–º–∏–∫–æ–º –∏–∑ –≥–æ—Ä–Ω–æ–≥–æ –ö—Ä—ã–º–∞. –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ —ç—Ç–∏—Ö –º–µ—Å—Ç –ø—Ä–∏—Ç—è–Ω—É–ª–∞ –∏ –æ–±—ä–µ–¥–∏–Ω–∏–ª–∞ —Å–∞–º—ã—Ö —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤,
          –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏—Ö –µ–¥–∏–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏. –ò–∑ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏—Ö —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –º—ã –∏ —Å–æ–±—Ä–∞–ª–∏ –¥–ª—è –≤–∞—Å —ç—Ç–∏ –ø–æ–¥–∞—Ä–æ—á–Ω—ã–µ –Ω–∞–±–æ—Ä—ã. –í—Å–µ
          —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–±–æ—Ä–∞ —Å–¥–µ–ª–∞–Ω—ã –≤—Ä—É—á–Ω—É—é –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤, –≥–ª–∞–≤–Ω—ã–π –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö - –ª—é–±–æ–≤—å! –ö—É–ø–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –∏–∑
          –ö—Ä—ã–º–∞ –æ–Ω–ª–∞–π–Ω —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –ø–æ –†–æ—Å—Å–∏–∏.</h4>
        <GiftSlides />
        <div className="items">
          {products.length > 0 && (
            products.map((item, key) => {
                return (
                  <Gift
                    key={key}
                    id={item.id}
                    title={item.title}
                    desc={item.desc}
                    price={item.price}
                    img={item.img}
                    selected={isSelected(item.id)}
                    addToCart={() => props.AddCart(item)}
                  />
                )
              }
            )
          )}
        </div>
        <div className="note">
          <p>–ü–æ –≤–æ–∑–Ω–∏–∫—à–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ <b>Whatsapp: +7 (995) 599-42-55</b></p>
          <p>*–ß–∞—Å—Ç—å –∏–∑–¥–µ–ª–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ –µ–¥–∏–Ω–∏—á–Ω–æ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–µ, –ø–æ—ç—Ç–æ–º—É –≤–∞—à–µ –∏–∑–¥–µ–ª–∏–µ (–∫–µ—Ä–∞–º–∏–∫–∞, –Ω–æ–≤–æ–≥–æ–¥–Ω—è—è –∏–≥—Ä—É—à–∫–∞) –º–æ–∂–µ—Ç
            –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–Ω–æ–≥–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ</p>
          <p>**–î–æ—Å—Ç–∞–≤–∫–∞ –ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –∫ –≤–∞–º –æ—Ç–¥–µ–ª–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–∞ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–∞—Ä–∫–∞</p>
          <p>***–î–æ—Å—Ç–∞–≤–∫—É –ø–æ—Å—ã–ª–∫–∏ –Ω–∞ –¥–æ–º –º–æ–∂–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –Ω–∞–ø—Ä—è–º—É—é —É –ü–æ—á—Ç—ã –†–æ—Å—Å–∏–∏, –æ—Å—Ç–∞–≤–∏–≤ –∑–∞—è–≤–∫—É –Ω–∞ —Å–∞–π—Ç–µ
            –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏–≤ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: <a href="https://www.pochta.ru/support/post-rules/home-delivery" target="_blank"
                                         rel="noopener nofollow">https://www.pochta.ru/support/post-rules/home-delivery</a>
          </p>
        </div>
        <div className="comeback">
          <Link to="/">
            &larr; –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
          </Link>
        </div>
      </div>
    </div>
  )
}

const mapStateToProps = state => {
  return {
    products: state._todoProduct,
    numberCart: state._todoProduct.numberCart,
    carts: state._todoProduct.Carts
  };
}

function mapDispatchToProps(dispatch) {
  return {
    AddCart: item => dispatch(AddCart(item))
  }
}

export default connect(mapStateToProps, mapDispatchToProps)(GiftBasket)
